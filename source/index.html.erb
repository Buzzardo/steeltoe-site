---
title: Steeltoe
---

<section class="bg-ms-blue hero">
  <div id="particles"></div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py4">
      <div class="clearfix">
        <div class="col sm-col-10 md-col-8">
          <h1 class="h2 sm-h1 white mt0 text-shadow regular">Don't reinvent the distributed wheel. <br/> Steeltoe is a .NET toolkit for common microservice patterns.</h1>
        </div>
      </div>
      <div class="clearfix sm-mt2">
        <div class="col col-12">
          <a target="_blank" href="https://github.com/SteeltoeOSS/Samples/blob/master/MusicStore/README.md" class="btn center sm-left block sm-inline-block bg-white ms-blue sm-mr1 not-rounded regular">
            <i class="fa fa-github mr1"></i>
            View Sample App on GitHub
          </a>
          <a target="_blank" href="http://slack.steeltoe.io/" class="btn btn-outline center sm-left  block sm-inline-block border-white white mt1 sm-mt0 not-rounded regular">
            <i class="fa fa-slack mr1"></i>
            Join us on Slack
          </a>
        </div>
      </div>
    </div>
  </div>
</section>


<main class="mt2">
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col col-12 sm-col-6">
          <h2 class="regular my0 steel-body muted">01</h2>
          <h1 class="mt0 mb1 steel-heading">Service Discovery</h1>
          <p class="mt0 steel-body">Steeltoe leverages Eureka for service discovery. Eureka sacrifices consistency guarantees to remain available in the event of a partition, allowing microservices to continue to register themselves and resolve other services in a given partition.</p>
        </div>
        <div class="col col-12 sm-col-6 sm-pl4">
          <img class="svg-illustration" id="service-discovery" src="images/service-discovery.svg" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py4">
        <div class="clearfix col-12">
          <div class="terminal">
            <div class="terminal-top-bar p1 bg-ms-blue">
              <ul class="list-reset m0 flex items-center justify-end">
                <li class="inline-block mr1">
                  <img src="images/icons/icon-minimize.svg" alt="">
                </li>
                <li class="inline-block mr1">
                  <img src="images/icons/icon-maximize.svg" alt="">
                </li>
                <li class="inline-block mr1 pointer eeToggle" data-ee="bsod">
                  <img src="images/icons/icon-close.svg" alt="">
                </li>
              </ul>
            </div>
            <div class="terminal-body">
              <div class="code-snippet" id="bsod-terminal">
                        <pre class="pb2 m0"><code class="c# m0">  public class FortuneService : IFortuneService
    {
        DiscoveryHttpClientHandler _handler;

        private const string RANDOM_FORTUNE_URL = "http://fortuneService/api/fortunes/random";

        public FortuneService(IDiscoveryClient client)
        {
            _handler = new DiscoveryHttpClientHandler(client);
        }

        public async Task<string> RandomFortuneAsync()
        {
            var client = GetClient();
            return await client.GetStringAsync(RANDOM_FORTUNE_URL);
        }

        private HttpClient GetClient()
        {
            var client = new HttpClient(_handler, false);
            return client;
        }
    }</code></pre>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col col-12 sm-col-6 sm-col-right sm-pl2">
          <h2 class="regular my0 steel-body muted">02</h2>
          <h1 class="mt0 mb1 steel-heading">Config Server</h1>
          <p class="mt0 steel-body">The Steeltoe bindings to Spring Cloud Config Server provide a way to push configuration to a set of microservices at run time instead of deploy time. Store your credentials securely, using industry best practices.</p>
        </div>
        <div class="col col-12 sm-col-6 sm-pr1">
          <img class="svg-illustration" id="external-configuration" src="images/external-configuration.svg" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py4">
        <div class="clearfix col-12">
          <div class="terminal">
            <div class="terminal-top-bar p1 bg-ms-blue">
              <ul class="list-reset m0 flex items-center justify-end">
                <li class="inline-block mr1">
                  <img src="images/icons/icon-minimize.svg" alt="">
                </li>
                <li class="inline-block mr1">
                  <img src="images/icons/icon-maximize.svg" alt="">
                </li>
                <li class="inline-block mr1 pointer eeToggle" data-ee="launch">
                  <img src="images/icons/icon-close.svg" alt="">
                </li>
              </ul>
            </div>
            <div class="terminal-body">
               <div class="code-snippet" id="launch-terminal">
                 <pre class="pb2 m0"><code class="c# m0"> var builder = new ConfigurationBuilder()
                  .SetBasePath(env.ContentRootPath)
                  .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)
                  .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true)
                  .AddEnvironmentVariables()
                  .AddConfigServer(env);
              Configuration = builder.Build();</code></pre>
               </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col col-12 sm-col-6">
          <h2 class="regular my0 steel-body muted">03</h2>
          <h1 class="mt0 mb1 steel-heading">Cloud Connectors</h1>
          <p class="mt0 steel-body">Steeltoe offers Cloud Connectors as a way of easily connecting to your services without having to wire up the connections yourself, specifically by hydrating your <code class="code-bash">/var/vcap</code> environment variable and turning it into a connection object. One fewer thing to maintain.</p>
        </div>
        <div class="col col-12 sm-col-6 sm-pl4">
          <img class="svg-illustration" id="cloud-connector" src="images/cloud-connector.svg" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py4">
        <div class="clearfix col-12">
          <div class="terminal">
            <div class="terminal-top-bar p1 bg-ms-blue">
              <ul class="list-reset m0 flex items-center justify-end">
                <li class="inline-block mr1">
                  <img src="images/icons/icon-minimize.svg" alt="">
                </li>
                <li class="inline-block mr1">
                  <img src="images/icons/icon-maximize.svg" alt="">
                </li>
                <li class="inline-block mr1 pointer eeToggle" data-ee="pipes">
                  <img src="images/icons/icon-close.svg">
                </li>
              </ul>
            </div>
            <div class="terminal-body">
              <div class="code-snippet" id="pipes-terminal">
                <pre class="pb2 m0"><code class="c# m0"> services.AddMySqlConnection(Configuration);
 ...
 public IActionResult MySqlData(
        [FromServices] MySqlConnection dbConnection)
    {
        dbConnection.Open();

        MySqlCommand cmd = new MySqlCommand("SELECT * FROM TestData;", dbConnection);
        MySqlDataReader rdr = cmd.ExecuteReader();

        while (rdr.Read())
        {
            ViewData["Key" + rdr[0]] = rdr[1];
        }

        rdr.Close();
        dbConnection.Close();

        return View();
    }
}
                </code></pre>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="py1 sm-py4 sm-mxn1">
        <h2 class="regular my0 steel-body muted">
          <i class="fa fa-quote-left"></i>
        </h2>
        <h1 class="mt0 mb3 steel-heading">What They're Saying</h1>
        <div class="clearfix">
          <div class="col col-12 sm-col-6 sm-px1">
            <blockquote class="twitter-tweet" data-cards="hidden" data-lang="en"><p lang="en" dir="ltr">New RC1 release of <a href="https://twitter.com/SteeltoeOSS">@SteeltoeOSS</a> <a href="https://t.co/q2ylxpWb0g">https://t.co/q2ylxpWb0g</a> - very cool for .NET Microservices working in a heterogeneous system</p>&mdash; Martin Woodward (@martinwoodward) <a href="https://twitter.com/martinwoodward/status/788043646490771456">October 17, 2016</a></blockquote>
          </div>
          <div class="col col-12 sm-col-6 sm-px1">
            <blockquote class="twitter-tweet" data-cards="hidden" data-lang="en"><p lang="en" dir="ltr">Pretty cool to see <a href="https://twitter.com/pivotalcf">@pivotalcf</a> activating <a href="https://twitter.com/NetflixOSS">@NetflixOSS</a> for .NET --check out the new Eureka client support: <a href="https://t.co/qtLv69fO4j">https://t.co/qtLv69fO4j</a></p>&mdash; James Watters (@wattersjames) <a href="https://twitter.com/wattersjames/status/748980891213520896">July 1, 2016</a></blockquote>
          </div>
        </div>
        <div class="clearfix">
          <div class="col col-12 sm-col-6 sm-px1">
            <blockquote class="twitter-tweet" data-conversation="none" data-lang="en"><p lang="en" dir="ltr">Interesting update on steeltoe.io Cloud Native .NET Applications with <a href="https://twitter.com/moredeploys">@moredeploys</a> <a href="https://twitter.com/ritam">@ritam</a> &amp; friends at <a href="https://twitter.com/pivotal">@pivotal</a>. Will be watching closely</p>&mdash; Fintan Ryan (@fintanr) <a href="https://twitter.com/fintanr/status/785520930114117632">October 10, 2016</a></blockquote>
          </div>
          <div class="col col-12 sm-col-6 sm-px1">
            <blockquote class="twitter-tweet" data-cards="hidden" data-lang="en"><p lang="en" dir="ltr">spring cloud + iron foundry became steel toe (iron meets boot) <a href="https://t.co/s3LPkoWOKL">https://t.co/s3LPkoWOKL</a></p>&mdash; Intolerant Browser (@monkchips) <a href="https://twitter.com/monkchips/status/785512423356788736">October 10, 2016</a></blockquote>
          </div>
        </div>
      </section>
    </div>
  </div>
</main>
