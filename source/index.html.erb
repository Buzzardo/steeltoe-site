---
title: Steeltoe
---

<section class="bg-ms-blue hero">
  <div id="particles"></div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py4">
      <div class="clearfix">
        <div class="col sm-col-10 md-col-8">
          <h1 class="h2 sm-h1 white mt0 text-shadow regular">Don't reinvent the distributed wheel. <br/> Steeltoe is a .NET toolkit for common microservice patterns.</h1>
        </div>
      </div>
      <div class="clearfix sm-mt2">
        <div class="col col-12">
          <a target="_blank" href="https://github.com/SteeltoeOSS/Samples/blob/master/MusicStore/README.md" class="btn btn-outline center sm-left block sm-inline-block border-none bg-white ms-blue sm-mr1 not-rounded">
            <i class="fa fa-github mr1"></i>
            View Sample App on GitHub
          </a>
          <a target="_blank" href="http://slack.steeltoe.io/" class="btn btn-outline center sm-left  block sm-inline-block border-white white mt1 sm-mt0 not-rounded">
            <i class="fa fa-slack mr1"></i>
            Join us on Slack
          </a>
        </div>
      </div>
    </div>
  </div>
</section>


<main class="mt2">
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col sm-col-6">
          <h2 class="regular my0 steel-body muted">01</h2>
          <h1 class="mt0 mb1 steel-heading">Service Discovery</h1>
          <p class="mt0 steel-body">Steeltoe leverages Eureka for service discovery. Eureka sacrifices consistency guarantees to remain available in the event of a partition, allowing microservices to continue to register themselves and resolve other services in a given partition.</p>
        </div>
        <div class="col sm-col-6 sm-pl4">
          <img src="http://placehold.it/1000x500" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py4">
        <div class="clearfix col-12">
          <div class="terminal">
            <div class="terminal-top-bar p1 bg-ms-blue">
              <ul class="list-reset m0 flex items-center justify-end">
                <li class="inline-block mr1">
                  <img src="images/icons/icon-minimize.svg" alt="">
                </li>
                <li class="inline-block mr1">
                  <img src="images/icons/icon-maximize.svg" alt="">
                </li>
                <li class="inline-block mr1">
                  <img src="images/icons/icon-close.svg" alt="">
                </li>
              </ul>
            </div>
            <pre class="pb2 m0"><code class="c# m0 codeSnippet"> function factorial(n) { console.log('foobar') }
                 </code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="max-width-4 mx-auto">
    <div class="px2 py2 sm-py4">
      <section class="clearfix py1 sm-py4">
        <div class="col sm-col-6 sm-col-right">
          <h2 class="regular my0 steel-body muted">02</h2>
          <h1 class="mt0 mb1 steel-heading">Config Server</h1>
          <p class="mt0 steel-body">The Steeltoe bindings to Spring Cloud Config Server provide a way to push configuration to a set of microservices at run time instead of deploy time. Store your credentials securely, using industry best practices.</p>
        </div>
        <div class="col sm-col-6 sm-pr4">
          <img src="http://placehold.it/1000x500" alt="">
        </div>
      </section>
    </div>
  </div>
  <div class="bg-faint-blue">
    <div class="max-width-4 mx-auto">
      <div class="px2 py4">
        <div class="clearfix col-12">
          <div class="terminal">
            <div class="terminal-top-bar p1 bg-ms-blue">
              <ul class="list-reset m0 flex items-center justify-end">
                <li class="inline-block mr1">
                  <img src="images/icons/icon-minimize.svg" alt="">
                </li>
                <li class="inline-block mr1">
                  <img src="images/icons/icon-maximize.svg" alt="">
                </li>
                <li class="inline-block mr1">
                  <img src="images/icons/icon-close.svg" alt="">
                </li>
              </ul>
            </div>
            <pre class="pb2 m0"><code class="c# m0 codeSnippet"> var builder = new ConfigurationBuilder()
                 .SetBasePath(env.ContentRootPath)
                 .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)
                 .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true)
                 .AddEnvironmentVariables()
                 .AddConfigServer(env);
             Configuration = builder.Build();</code></pre>
          </div>
        </div>
      </div>
    </div>
  </div>


   <!--  <section class="clearfix py1 sm-py4">
      <div class="col sm-col-6">
        <h2 class="regular my0 steel-body muted">02</h2>
        <h1 class="mt0 mb1 steel-heading">Config Server</h1>
        <p class="mt0 steel-body">The Steeltoe bindings to Spring Cloud Config Server provide a way to push configuration to a set of microservices at run time instead of deploy time. Store your credentials securely, using industry best practices.</p>
      </div>
    </section>
    <hr class="steel-border muted">
    <section class="clearfix py1 sm-py4">
      <div class="col sm-col-6">
        <h2 class="regular my0 steel-body muted">03</h2>
        <h1 class="mt0 mb1 steel-heading">Cloud Connectors</h1>
        <p class="mt0 steel-body">Steeltoe offers Cloud Connectors as a way of easily connecting to your services without having to wire up the connections yourself, specifically by hydrating your VAR VCAP environment variable and turning it into a connection object. One fewer thing to maintain.</p>
      </div>
    </section>
    <hr class="steel-border muted">
    <section class="clearfix py1 sm-py4">
      <div class="sm-col-7 mx-auto">
        <div class="terminal">
          <div class="terminal-top-bar p1 bg-ms-blue">
            <ul class="list-reset m0 flex items-center justify-end">
              <li class="inline-block mr1">
                <img src="images/icons/icon-minimize.svg" alt="">
              </li>
              <li class="inline-block mr1">
                <img src="images/icons/icon-maximize.svg" alt="">
              </li>
              <li class="inline-block mr1">
                <img src="images/icons/icon-close.svg" alt="">
              </li>
            </ul>
          </div>
      <pre class="pb2 m0"><code class="c# m0 codeSnippet">  using Microsoft.Extensions.Configuration;
  using Steeltoe.Extensions.Configuration.ConfigServer;

      namespace Foo.Controllers
      {
          public class HomeController : Controller
          {

              private IConfigurationRoot Config { get; set; }

              public HomeController(IConfigurationRoot config)
              {
                  Config = config;
              }</code></pre>
        </div>
      </div>
    </section> -->
</main>
